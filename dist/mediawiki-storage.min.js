"use strict";!function(e){var t=function(){};t.prototype.get=function(e){if("object"!=typeof e)throw new TypeError("function must receive an object");var t=this._createQueryUrl(e),r=this;$.ajax({url:t,dataType:"jsonp",contentType:"application/json",success:function(t){if("function"==typeof e.success){var o;try{o=r._getPageJson(t)}catch(n){return e.error(n)}e.success(o)}},error:function(t,r,o){"function"==typeof e.error&&e.error(o)}})},t.prototype._createQueryUrl=function(e){if("string"!=typeof e.host)throw new TypeError("host must be a string");var t;if("string"==typeof e.pageName)t="&titles="+e.pageName;else if("string"==typeof e.pageId)t="&pageids="+e.pageId;else{if("string"!=typeof e.revId)throw new TypeError("one of (pageName|pageId|revId) must be a string");t="&revids="+e.revId}return["http://",e.host,"/w/api.php","?action=query","&prop=revisions","&format=json","&rvprop=content",t].join("")},t.prototype._getPageJson=function(e){var t,r;try{var o=e.query.pages,n=Object.keys(o)[0];t=o[n].revisions[0]["*"]}catch(i){throw new SyntaxError("unexpected query result")}try{r=JSON.parse(t)}catch(i){throw new SyntaxError("page contents are not a valid json")}return r};var r=new t;"function"==typeof define&&define.amd?define(function(){return r}):"undefined"!=typeof module&&module.exports?module.exports=r:e.mediawikiStorage=r}(window);