"use strict";!function(e){var r=function(){};r.prototype.get=function(e){if("object"!=typeof e)throw new TypeError("function must receive an object");var r=$.Deferred(),t=this._createQueryUrl(e),o=this;return $.ajax({url:t,dataType:"jsonp",contentType:"application/json",success:function(t){var n;try{n=o._getPageJson(t)}catch(i){return"function"==typeof e.error&&e.error(i),void r.reject(i)}"function"==typeof e.success&&e.success(n),r.resolve(n)},error:function(t,o,n){"function"==typeof e.error&&e.error(n),r.reject(n)}}),r.promise()},r.prototype._createQueryUrl=function(e){if("string"!=typeof e.host)throw new TypeError("host must be a string");var r;if("string"==typeof e.pageName)r="&titles="+e.pageName;else if("string"==typeof e.pageId)r="&pageids="+e.pageId;else{if("string"!=typeof e.revId)throw new TypeError("one of (pageName|pageId|revId) must be a string");r="&revids="+e.revId}return["//",e.host,"/w/api.php","?action=query","&prop=revisions","&format=json","&rvprop=content",r].join("")},r.prototype._getPageJson=function(e){var r,t;try{var o=e.query.pages,n=Object.keys(o)[0];r=o[n].revisions[0]["*"]}catch(i){throw new SyntaxError("unexpected query result")}try{t=JSON.parse(r)}catch(i){throw new SyntaxError("page contents are not a valid json")}return t};var t=new r;"function"==typeof define&&define.amd?define(function(){return t}):"undefined"!=typeof module&&module.exports?module.exports=t:e.mediawikiStorage=t}(window);